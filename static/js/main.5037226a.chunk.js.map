{"version":3,"sources":["compnents/Button.jsx","compnents/Field.jsx","compnents/Navigation.jsx","compnents/ManipulationPanel.jsx","utils/index.js","App.js","index.js"],"names":["Button","status","onStart","onStop","onRestart","className","onClick","Field","fields","map","row","column","Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","37","38","39","40","OppositeDirection","Delta","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","tick","setTick","setStatus","direction","setDirection","setDifficulty","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5037226a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({ status, onStart, onStop, onRestart }) => {\n    return (\n        <div className=\"button\">\n            { status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button>}\n            { status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button>}\n            { status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button>}\n            { status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button>}\n        </div>\n    );\n};\n\nexport default Button;","import React from 'react'\n\nconst Field = ({ fields }) => {\n    return (\n        <div className=\"field\">\n            {\n                fields.map((row) => {\n                    return row.map((column) => {\n                        return <div className={`dots ${column}`}></div>\n                    })\n                })\n            }\n\n\n            {/* {\n                new Array(35 * 35).fill('').map(() => <div className=\"dots\"></div>)\n            } */}\n\n        </div>\n    );\n};\n\nexport default Field;\n\n","import React from 'react';\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n\n    return (\n        <div className=\"navigation\" >\n            <div className=\"navigation-item\" >\n                <span className=\"navigation-label\" > Length: </span >\n                <div className=\"navigation-item-number-container\" >\n                    <div className=\"num-board\" > {length}</div >\n                </div >\n            </div >\n            <div className=\"navigation-item\" >\n                <span className=\"navigation-label\" > Difficulty: </span >\n                <div className=\"navigation-item-number-container\" >\n                    <span className=\"num-board\" > {difficulty}</span >\n                    <div className=\"difficulty-button-container\" >\n                    </div >\n                    <div\n                        className={`difficulty-button difficulty-up ${upVisibility}`}\n                        onClick={onUpDifficulty}\n                    ></div>\n                    <div\n                        className={`difficulty-button difficulty-down ${downVisibility}`}\n                        onClick={onDownDifficulty}\n                    ></div>\n                </div >\n            </div >\n        </div >\n    )\n    // return (\n    //     <div className=\"navigation\">\n    //         <div className=\"navigation-item\">\n    //             <span className=\"navigation-label\">Length:</span>\n    //             <div className=\"navigation-item-number-container\">\n    //                 <div className=\"num-board\">{length}</div>\n    //             </div>\n    //         </div>\n    //         <div className=\"navigation-item\">\n    //             <span className=\"navigation-label\">Difficulty:</span>\n    //             <div className=\"navigation-item-number-container\">\n    //                 <span className=\"num-board\">{difficulty}</span>\n    //                 <div className=\"difficulty-button-container\">\n    //                     <div className={`difficulty-button difficulty-up ${upVisibility}`}\n    //                         onClick={onUpDifficulty}>\n    //                     </div>\n    //                     <div\n    //                         className={`difficulty-button difficulty-down ${downVisibility}`}\n    //                         onClick={onDownDifficulty}\n    //                     ></div>\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </div>\n\n    // )\n}\n\nexport default Navigation;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faArrowLeft,\n    faArrowUp,\n    faArrowDown,\n    faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\n\n\nconst ManipulationPanel = ({ onChange }) => {\n    const onUp = () => onChange('up')\n    const onRight = () => onChange('right')\n    const onLeft = () => onChange('left')\n    const onDown = () => onChange('down')\n\n    return (\n        <div className=\"manipulation-panel\">\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}><FontAwesomeIcon icon={faArrowLeft} />            </button>\n            <div>\n                <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>   <FontAwesomeIcon icon={faArrowUp} />                </button>\n                <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>  <FontAwesomeIcon icon={faArrowDown} />                </button> </div>\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>    <FontAwesomeIcon icon={faArrowRight} />            </button>  </div>\n    )\n}\nexport default ManipulationPanel;","export const getFoodPosition = (fieldSize, excludes) => {\n    while (true) {\n        const x = Math.floor(Math.random() * (fieldSize - 1) - 1) + 1;\n        const y = Math.floor(Math.random() * (fieldSize - 1) - 1) + 1;\n        const conflict = excludes.some(item => item.x === x && item.y === y)\n\n        if (!conflict) {\n            return { x, y };\n        }\n    }\n};\n\n\n\nexport const initFields = (fieldSize, snake) => { //空の配列を作ったフィールド\n    const fields = [] //からの配列を作る\n\n    for (let i = 0; i < fieldSize; i++) {　//ループ回す\n        const cols = new Array(fieldSize).fill('')　//横の空の配列を初期値として設定する\n        fields.push(cols)　//空の配列に初期値colsを追加する\n    }\n    fields[snake.y][snake.x] = 'snake'\n\n\n    const food = getFoodPosition(fieldSize, [snake])\n    fields[food.y][food.x] = 'food'\n\n    return fields\n}\n\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport Button from './compnents/Button';\nimport Field from './compnents/Field';\nimport Navigation from './compnents/Navigation';\nimport ManipulationPanel from './compnents/ManipulationPanel';\nimport { initFields, getFoodPosition } from './utils';　//フィールド\n\nconst initialPosition = { x: 17, y: 17 } //初回レンダリング時（リロード時？）のスタート地点\nconst initialValues = initFields(35, initialPosition) //フィールド範囲の初期値\nconst defaultInterval = 100; //デフォルトの秒間隔\nconst defaultDifficulty = 3\n\nconst Difficulty = [1000, 500, 100, 50, 10]\n\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover',\n})\n\nconst Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n})\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n})\n\nconst OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up'\n})\n\nconst Delta = Object.freeze({　//座標の変化量を表す関数。\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n})\n\nlet timer = undefined　//時間の経過がスネークを動かすからtimer関数が必要。\n\n//タイマーが不要になった時（ゲームオーバー）、タイマーを削除する関数が必要。\n//タイマーの無効化、ネットワークへのリクエストのキャンセルなど、必要ない設定を破棄することでメモリを開放できる\nconst unsubscribe = () => {\n  if (!timer) {\n    return\n  }\n  clearInterval(timer)\n}\n\nconst isCollision = (fieldSize, position) => {\n\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n\n  const [fields, setFields] = useState(initialValues)//フィールドstateの初期値\n  const [body, setBody] = useState([])　//スネークのボディ。\n  const [tick, setTick] = useState(0)  //スネークの動きの速さ＝時間の経過\n  const [status, setStatus] = useState(GameStatus.init) //ゲームの状態　初期or停止orプレイングorゲームオーバー\n  const [direction, setDirection] = useState(Direction.up) //進行方向の状態\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n\n  useEffect(() => { //初回および毎回のレンダリング時に実行される。タイマーのセット \n    setBody([initialPosition])\n    //ゲームの中の時間を管理する  \n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, interval)\n    return unsubscribe　//コンポーネントが削除される時に実行する\n  }, [difficulty])\n\n  useEffect(() => {  //ーーーーーーーーーーーーーーーーーーーーーーーー不明ーーーーーーーーーーー\n    if (body.length === 0 || status !== GameStatus.playing) { //不明：画面を読み込んでもスネークは動かない。\n      return\n    }\n\n    const canContinue = handleMoving()\n    if (!canContinue) {\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick])\n\n  const onStart = () => setStatus(GameStatus.playing)//スタートボタンを押したらスネークが動き出すようにしたい。ボタンを押したらステータスが\"playingに切り替わる”\n\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval)\n    setDirection(Direction.up)\n    setStatus(GameStatus.init)\n    setBody(initialPosition)\n    setFields(initFields(35, initialPosition))\n  }\n\n  const onChangeDirection = useCallback((newDirection) => {\n    if (status !== GameStatus.playing) {\n      return direction\n    }\n    if (OppositeDirection[direction] === newDirection) {\n      return\n    }\n    setDirection(newDirection)\n  }, [direction, status])\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if (status !== GameStatus.init) {\n      return\n    }\n    if (difficulty < 1 || difficulty > Difficulty.length) {\n      return\n    }\n    setDifficulty(difficulty)\n  }, [status, difficulty])\n\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n  const handleMoving = () => { //スネークを動かす関数。上に上がるから、y軸が-1になる。\n    const { x, y } = body[0]; //初期値 いつ書き換わるのか？　body何の値を指してるのか？\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    };\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) { //レンダリング後の新しいポジションがフィールド外なら、ステートを更新せずにfalseを返す。つまりゲームオーバー\n      unsubscribe()\n      return false\n    }\n\n    // fields[y][x] = '';\n    const newBody = [...body] //Bodyステートをコピーした関数。これを書き換えることで、状態を更新している。Reactでは、useStateで更新する関数以外で更新すると、うまくレンダリングできない時があるから。\n    if (fields[newPosition.y][newPosition.x] !== 'food') {　//エサでなければ、末尾のポジションを取り出して、それを空文字でリセットする。\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n\n    } else { //次のポジションがエサの時（エサの隣に来る＝エサを食べる）\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n\n    fields[newPosition.y][newPosition.x] = 'snake'　//snakeの位置\n\n    // setBody([newPosition])//stateの更新\n    newBody.unshift(newPosition)//stateの更新\n\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n\n\n\n  return (\n    <div className=\"App\">\n\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation length={body.length} difficulty={difficulty} onChangeDifficulty={onChangeDifficulty} />\n      </header>\n\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n\n      <footer className=\"footer\">\n        <Button status={status} onStop={onStop} onStart={onStart} onRestart={onRestart} />\n\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}